# Задача 1.
# На заводе «Кофейный» открывается новое кафе.
# Изначально есть некоторое количество кофейных зерен, молока и взбитых сливок.
# Надо написать функцию choose_coffee(preference1, preference2,..., preferenceN),
# которая возвращает напиток, который можно приготовить из имеющихся продуктов (ingredients).
# На вход функция принимает заранее неизвестное количество предпочтений посетителя.
# Все напитки перечислены в порядке убывания предпочтений и гарантированно не повторяются.
# Бариста готовит наиболее предпочитаемый напиток из доступных.
# Для Эспрессо требуется: 1 порция кофейных зерен.
# Для Капучино требуется: 1 порция кофейных зерен и 3 порции молока.
# Для Маккиато требуется: 2 порции кофейных зерен и 1 порция молока.
# Для Кофе по-венски требуется: 1 порция кофейных зерен и 2 порции взбитых сливок.
# Для Латте Маккиато требуется: 1 порция кофейных зерен, 2 порции молока и 1 порция взбитых сливок.
# Для Кон Панна требуется: 1 порция кофейных зерен и 1 порция взбитых сливок.
#
# При приготовлении напитка ингредиенты расходуются.
# Если недостаточно ингредиентов, то вернуть сообщение: «К сожалению, не можем предложить Вам напиток».

# print('Введите количество порций каждого ингредиента (кофейных зерен, молока, взбитых сливок) через запятую')
# ingredients = input().split(', ')
# ingredients = list(map(int, ingredients))
# print(ingredients)
# resept = {
#     "Эспрессо": [1, 0, 0],
#     "Капучино": [1, 3, 0],
#     "Маккиато": [2, 1, 0],
#     "Кофе по-венски": [1, 0, 2],
#     "Латте Маккиато": [1, 2, 1],
#     "Кон Панна": [1, 0, 1],
# }
# print("какие напитки Вам бы хотелось? (введите через запятую)")
# choose = input().split(", ")
#
# def choose_coffee(*args):
#     global ingredients
#     for x in args:
#         need = resept[x]
#         if ingredients[0] - need[0] >= 0 and ingredients[1] - need[1] >= 0 and ingredients[2] - need[2] >= 0:
#             ingredients[0] -= need[0]
#             ingredients[1] -= need[1]
#             ingredients[2] -= need[2]
#             return x
#     else:
#         return "К сожалению, не можем предложить Вам напиток"
#
# print(resept.keys())
#
# choose_coffee()
# print((choose_coffee()))

# Задача 2.
# Напишите функцию encrypt_caesar(msg, shift),
# которая кодирует сообщение шифром Цезаря и возвращает его.
# Шифр Цезаря заменяет каждую букву в тексте на букву,
# которая отстоит в алфавите на некоторое фиксированное число позиций.
# В функцию передается сообщение и сдвиг алфавита.
# Если сдвиг не указан, то пусть ваша функция кодирует сдвиг алфавита на 3 позиции:
# А→Г, А→Г, Б→Д, Б→Д, В→Е, В→Е, …… Э→А, Э→А, Ю→Б, Ю→Б, Я→В, Я→В
# Все символы, кроме русских букв должны остаться неизменными.
# Маленькие буквы должны превращаться в маленькие, большие — в большие.
# Напишите также функцию декодирования decrypt_caesar(msg, shift),
# также использующую сдвиг по умолчанию.
# При написании функции декодирования используйте вашу функцию кодирования.

alphabet = ['а', 'б', 'в', 'г', 'д', 'е', 'ж', 'з', 'и', 'й',
        'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х',
        'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я']
upper_alphabet = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'Й',
        'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х',
        'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я']


def Caesar(msg, shift):
    ret = ""
    for x in msg:
        if x in alphabet:
            ind = alphabet.index(x) % len(alphabet)
            ret += alphabet[(ind + shift) % len(alphabet)]
        elif x in upper_alphabet:
            ind = upper_alphabet.index(x) % len(alphabet)
            ret += upper_alphabet[(ind + shift) % len(alphabet)]
        else:
            ret += x
    return ret


def decryptCaesar(msg, shift):
    ret = ""
    for x in msg:
        if x in alphabet:
            ind = alphabet.index(x)
            ret += alphabet[ind - shift]
        elif x in upper_alphabet:
            ind = upper_alphabet.index(x)
            ret += upper_alphabet[ind - shift]
        else:
            ret += x
    return ret

print(Caesar("Да здравствует салат Цезарь!", 3))
print(decryptCaesar("Зг кзугефхецих фгогх Щикгуя!", 3))